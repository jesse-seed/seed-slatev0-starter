/*============================================================================
  Grid
    - Based on CSS Wizardry grid
==============================================================================*/

.grid {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -$grid-gutter;
  @include display-flexbox();
  @include flex-wrap(wrap);

  @include media-query($small-down) {
    margin-left: -$grid-gutter-mobile;
  }
}

.grid__item {
  max-width: 100%;
  width: 100%;
  padding-left: $grid-gutter;
  @include flex-basis(100%);
  @include flex-grow(1);

  @include media-query($small-down) {
    padding-left: $grid-gutter-mobile;
  }
}

/*============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
==============================================================================*/
.grid--rev {
  direction: rtl;
  text-align: left;

  > .grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

/*============================================================================
  Grid Columns
    - Create width classes, prepended by the breakpoint name.
==============================================================================*/
// sass-lint:disable brace-style empty-line-between-blocks
@mixin grid-column-generator($breakpoint: '') {
  /** Whole */
  .#{$breakpoint}one-whole { @include flex-basis(100%); }

  /* )Halves */
  .#{$breakpoint}one-half { @include flex-basis(percentage(1 / 2)); max-width: percentage(1 / 2); }

  /* Thirds */
  .#{$breakpoint}one-third { @include flex-basis(percentage(1 / 3)); max-width: percentage(1 / 3); }
  .#{$breakpoint}two-thirds { @include flex-basis(percentage(2 / 3)); max-width: percentage(2 / 3); }

  /* Quarters */
  .#{$breakpoint}one-quarter { @include flex-basis(percentage(1 / 4)); max-width: percentage(1 / 4); }
  .#{$breakpoint}two-quarters { @include flex-basis(percentage(2 / 4)); max-width: percentage(2 / 4); }
  .#{$breakpoint}three-quarters { @include flex-basis(percentage(3 / 4)); max-width: percentage(3 / 4); }

  /* Fifths */
  .#{$breakpoint}one-fifth { @include flex-basis(percentage(1 / 5)); max-width: percentage(1 / 5); }
  .#{$breakpoint}two-fifths { @include flex-basis(percentage(2 / 5)); max-width: percentage(2 / 5); }
  .#{$breakpoint}three-fifths { @include flex-basis(percentage(3 / 5)); max-width: percentage(3 / 5); }
  .#{$breakpoint}four-fifths { @include flex-basis(percentage(4 / 5)); max-width: percentage(4 / 5); }

  /* Sixths */
  .#{$breakpoint}one-sixth { @include flex-basis(percentage(1 / 6)); max-width: percentage(1 / 6); }
  .#{$breakpoint}two-sixths { @include flex-basis(percentage(2 / 6)); max-width: percentage(2 / 6); }
  .#{$breakpoint}three-sixths { @include flex-basis(percentage(3 / 6)); max-width: percentage(3 / 6); }
  .#{$breakpoint}four-sixths { @include flex-basis(percentage(4 / 6)); max-width: percentage(4 / 6); }
  .#{$breakpoint}five-sixths { @include flex-basis(percentage(5 / 6)); max-width: percentage(5 / 6); }

  /* Eighths */
  .#{$breakpoint}one-eighth { @include flex-basis(percentage(1 / 8)); max-width: percentage(1 / 8); }
  .#{$breakpoint}two-eighths { @include flex-basis(percentage(2 / 8)); max-width: percentage(2 / 8); }
  .#{$breakpoint}three-eighths { @include flex-basis(percentage(3 / 8)); max-width: percentage(3 / 8); }
  .#{$breakpoint}four-eighths { @include flex-basis(percentage(4 / 8)); max-width: percentage(4 / 8); }
  .#{$breakpoint}five-eighths { @include flex-basis(percentage(5 / 8)); max-width: percentage(5 / 8); }
  .#{$breakpoint}six-eighths { @include flex-basis(percentage(6 / 8)); max-width: percentage(6 / 8); }
  .#{$breakpoint}seven-eighths { @include flex-basis(percentage(7 / 8)); max-width: percentage(7 / 8); }

  /* Tenths */
  .#{$breakpoint}one-tenth { @include flex-basis(percentage(1 / 10)); max-width: percentage(1 / 10); }
  .#{$breakpoint}two-tenths { @include flex-basis(percentage(2 / 10)); max-width: percentage(2 / 10); }
  .#{$breakpoint}three-tenths { @include flex-basis(percentage(3 / 10)); max-width: percentage(3 / 10); }
  .#{$breakpoint}four-tenths { @include flex-basis(percentage(4 / 10)); max-width: percentage(4 / 10); }
  .#{$breakpoint}five-tenths { @include flex-basis(percentage(5 / 10)); max-width: percentage(5 / 10); }
  .#{$breakpoint}six-tenths { @include flex-basis(percentage(6 / 10)); max-width: percentage(6 / 10); }
  .#{$breakpoint}seven-tenths { @include flex-basis(percentage(7 / 10)); max-width: percentage(7 / 10); }
  .#{$breakpoint}eight-tenths { @include flex-basis(percentage(8 / 10)); max-width: percentage(8 / 10); }
  .#{$breakpoint}nine-tenths { @include flex-basis(percentage(9 / 10)); max-width: percentage(9 / 10); }

  /* Twelfths */
  .#{$breakpoint}one-twelfth { @include flex-basis(percentage(1 / 12)); max-width: percentage(1 / 12); }
  .#{$breakpoint}two-twelfths { @include flex-basis(percentage(2 / 12)); max-width: percentage(2 / 12); }
  .#{$breakpoint}three-twelfths { @include flex-basis(percentage(3 / 12)); max-width: percentage(3 / 12); }
  .#{$breakpoint}four-twelfths { @include flex-basis(percentage(4 / 12)); max-width: percentage(4 / 12); }
  .#{$breakpoint}five-twelfths { @include flex-basis(percentage(5 / 12)); max-width: percentage(5 / 12); }
  .#{$breakpoint}six-twelfths { @include flex-basis(percentage(6 / 12)); max-width: percentage(6 / 12); }
  .#{$breakpoint}seven-twelfths { @include flex-basis(percentage(7 / 12)); max-width: percentage(7 / 12); }
  .#{$breakpoint}eight-twelfths { @include flex-basis(percentage(8 / 12)); max-width: percentage(8 / 12); }
  .#{$breakpoint}nine-twelfths { @include flex-basis(percentage(9 / 12)); max-width: percentage(9 / 12); }
  .#{$breakpoint}ten-twelfths { @include flex-basis(percentage(10 / 12)); max-width: percentage(10 / 12); }
  .#{$breakpoint}eleven-twelfths { @include flex-basis(percentage(11 / 12)); max-width: percentage(11 / 12); }
}

// sass-lint:enable brace-style empty-line-between-blocks

/*================ Build Base Grid Classes ================*/
@include grid-column-generator();
@include responsive-display-helper();
@include responsive-text-align-helper();

/*================ Build Responsive Grid Classes ================*/
@each $breakpoint in $breakpoint-has-widths {
  @include media-query($breakpoint) {
    @include grid-column-generator('#{$breakpoint}--');
    @include responsive-display-helper('#{$breakpoint}--');
    @include responsive-text-align-helper('#{$breakpoint}--');
  }
}
